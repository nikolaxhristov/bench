import{pipeline as t}from"@nikolarhristov/pipeline";import{Distribution as a,Rome as e}from"@rometools/js-api";import{resolve as n}from"path";import l from"../../../lib/astro-community/astro-rome/lib/get-config.js";const o=await e.create({distribution:a.NODE});o.applyConfiguration(JSON.parse(await l("rome.json"))),await new t({path:new Map([["./samples/nikolaxhristov/pipeline/","./output/nikolaxhristov/pipeline/"]]),files:"**/*.{js,mjs,cjs,ts}",pipeline:{wrote:async i=>o.formatContent(i.buffer.toString(),{filePath:n(i.inputPath)}).content,failed:async i=>`Error: Cannot format file ${i}!`,accomplished:async i=>`Formatted ${i.inputPath} in ${i.outputPath}.`,fulfilled:async i=>i.files>0?`Successfully formatted a total of ${i.files} JS and TS ${i.files===1?"file":"files"}.`:!1},logger:1}).process();
